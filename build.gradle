apply plugin: 'java'
apply plugin: 'com.bmuschko.nexus'

group = 'de.bwaldvogel'
version = '2.4.0'

sourceCompatibility = 1.7
targetCompatibility = 1.7

compileJava.options.encoding = 'UTF-8'

ext {
    title = 'log4j-systemd-journal-appender'
    description = 'Log4j appender for systemd journal.'
    url = 'https://www.github.com/bwaldvogel/log4j-systemd-journal-appender'
}

jar {
    manifest {
        attributes 'Implementation-Title': title, 'Implementation-Version': version
    }
}

// https://github.com/bmuschko/gradle-nexus-plugin
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}

modifyPom {
    project {
        groupId        'de.bwaldvogel'
        artifactId     'log4j-systemd-journal-appender'
        name           title
        description    'Log4j appender for systemd journal.'
        url            url
        inceptionYear '2014'

        scm {
            url 'git@github.com:bwaldvogel/log4j-systemd-journal-appender.git'
            connection 'scm:git:git@github.com:bwaldvogel/log4j-systemd-journal-appender.git'
            developerConnection 'scm:git:git@github.com:bwaldvogel/log4j-systemd-journal-appender.git'
        }

        licenses {
            license {
                name 'The BSD License'
                url 'http://www.opensource.org/licenses/bsd-license.php'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'bwaldvogel'
                name 'Benedikt Waldvogel'
                email 'mail@bwaldvogel.de'
            }
        }
    }
}

nexus {
    sign = true
}

repositories {
    mavenCentral()
}

wrapper {
    gradleVersion = '6.5'
    distributionType = Wrapper.DistributionType.ALL
}

dependencies {
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: 'latest.release'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: 'latest.release'
    implementation group: 'net.java.dev.jna', name: 'jna', version: 'latest.release'

    testImplementation group: 'junit', name: 'junit', version: 'latest.release'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: 'latest.release'

    components.all { ComponentMetadataDetails details ->
        details.statusScheme = ['candidate', 'release']
        if (details.id.version =~ /(?i).+(-|\.)(CANDIDATE|RC|BETA|ALPHA|PR|M\d+).*/) {
            details.status = 'candidate'
        } else {
            details.status = 'release'
        }
    }

    dependencyLocking {
        lockAllConfigurations()
    }

    task resolveAndLockAll {
        doFirst {
            assert gradle.startParameter.writeDependencyLocks
        }
        doLast {
            configurations.findAll {
                // Add any custom filtering on the configurations to be resolved
                it.canBeResolved
            }.each { it.resolve() }
        }
    }
}
